continue
params[:organisation_access_request][:profile_id]
params
continue
current_user&.user_members&.first&.member
current_user&.user_members&.first
current_user&.user_members
current_user&.user_members&.first&.member
continue
current_user.current_organisation_id
current_user.organisation_id
Current.organisation
current
Current
Current.organisation
@member.errors
@member = Member.create(name: params[:user][:name], email: params[:user][:email],
                                    phone: params[:user][:phone], organisation: Current.organisation)
Member.create(name: params[:user][:name], email: params[:user][:email],
                                    phone: params[:user][:phone], organisation: Current.organisation)
continue
params
 Member.create(name: params[:name], email: params[:email],
                                    phone: params[:phone], organisation: Current.organisation)
continue
 current_user&.members&.for_organisation&.first
continue
@member&.id.blank?
@member&.id
@member&.empty?
@member&.blank?
@member&.present?
@member
continue
current_user&.members
current_user&.members&.for_organisation&.first
continue
current_user&.members&.for_organisation&.first
continue
            @member.update(name: params[:name], email: params[:email], phone: params[:phone], organisation: @organisation)
@member.errors
@member.update(name: params[:name], email: params[:email], phone: params[:phone])
continue
member.errors
            member = Member.create(name: params[:name], email: params[:email], phone: params[:phone], organisation: @organisation)
           Member.create(name: params[:name], email: params[:email], phone: params[:phone], organisation: @organisation)
member&.present?
member
memeber
continue
current_user&.members
continue
current_user&.members
current_user&.members&.for_organisation&.first
continue
@request.role
@request.organisation
 @request.user
continue
exclude_actions[resource]&.include?(action)
continue
resource
exclude_actions[resource]&.include?(action)
action_dont_have_to_be_checked
continue
model_list.map(&:name).include?(resource)
authorized
continue
test = ProfileRight.find_or_create_by(
                    profile: @profile,
                    resource: resource.to_s,
                    action: action,
                    authorized: false,
                    organisation_id: Current.organisation.id
                )
test.errors
test = ProfileRight.find_or_create_by(
                    profile: @profile,
                    resource: resource.to_s,
                    action: action,
                    authorized: false,
                    organisation_id: Current.organisation.id
                )
ProfileRight.find_or_create_by(
                    profile: @profile,
                    resource: resource.to_s,
                    action: action,
                    authorized: false,
                    organisation_id: Current.organisation.id
                )
ProfileRight.find_or_create_by(
                    profile: @profile,
                    resource: resource,
                    action: action,
                    authorized: false,
                    organisation_id: Current.organisation.id
                )
action
resource
continue
resource.to_s.underscore
continue
 @profile
@profile.profile_rights
 @profile
continue
 @profile
@proflie
@profile.profile_rights
continue
@profile
continue
 current_user.user_organisations.for_organisation.first
 current_user.user_organisations.for_organisation.first.creator
continue
        current_user.user_organisations.find_by(organisation_id: current_user.current_organisation_id).profile.authorized_for?(resource, action)
        current_user.where(organisation_id: Current.organisation.id).first.profile.authorized_for?(resource, action)
current_user.for_organisation.user_organisations.first.profile
current_user.for_organisations.first.profile
current_user.for_organisation.first.profile
continue
current_user.user_organisations.any?(&:profile)
current_user.user_organisations.any?(&:profile
current_user.user_organisations.profile
current_user.user_organisations
continue
exclude_model.include?(self.class.name)
exclude_model
def exclude_model
        ['User', 'Organisation']
    end
exclude_model
exclude_model.include
exclude_model.include?(self.class.name)
self
continue
params
continue
params
continue
params[:profile]
params
continue
params
continue
request.patch?
continue
request.patch?
[7, 16] in /app/app/controllers/organisations_controller.rb
    7:     end
    8:
    9:     def switch
   10:         @organisations = current_user.super_admin ? Organisation.all : Organisation.where(id: current_user.organisations.pluck(:id))
   11:         byebug
=> 12:         if request.patch?
   13:             if @organisation and (current_user.super_admin || current_user.organisations.include?(@organisation))
   14:                 current_user.update(current_organisation_id: @organisation.id)
   15:                 redirect_to root_path, notice: "Vous utilisez maintenant l'organisation #{@organisation.name}"
   16:             else
(byebug) request.patch?
false
(byebug)
request.patch?
continue
request.patch?
continue
current_user&.super_admin
current_user&.profile
continue
subdomain
continue
"http://#{current_user.organisation.slug}.localhost:3000#{request.path}"
C"http://#{current_user.organisation.slug}.localhost:3000#{request.path}"
current_user
continue
request.host
subdomain.present?
 current_user && subdomain.present?
request.host != "#{current_user.organisation.slug}.localhost"
"#{current_user.organisation.slug}.localhost"
request.host
request.host != "#{current_user.organisation.slug}.localhost"
current_user&.organisation && request.host != "#{current_user.organisation.slug}.localhost"
current_user&.organisation
continue
"http://#{current_user.organisation.slug}.localhost:3000#{request.path}"
continue
"http://#{current_user.organisation.slug}.localhost:3000#{request.path}"
continue
"http://#{current_user.organisation.slug}.localhost:3000#{request.path}"
continue
"http://#{current_user.organisation.slug}.localhost:3000#{request.path}"
continue
"http://#{current_user.organisation.slug}.localhost:3000#{request.path}"
continue
"http://#{current_user.organisation.slug}.localhost:3000#{request.path}"
current_user.organisation.slug
continue
request.path
continue
request.path
continue
request.path
continue
request.path
continue
request.path
continue
request.path
current_user
continue
current_user
current_user && current_user.organisation
continue
request.path
current_user
current_user && current_user.organisation
continue
current_user
env
continue
 "http://#{current_user.organisation.slug}.localhost:3000#{request.path}"
request.path
current_user && current_user.organisation
 extract_subdomain(request.host)
n
devise_route?(request.path)
n
env['warden']&.user
current_user
n
current_user
n
request
n
continue
path
continue
path
pat
path.start_with?('/users/sign_in',
continue
path.start_with?('/users/sign_in',
                         '/users/sign_out',
                         '/users/password',
                         '/users/sign_up',
                         '/users/confirmation')
path
continue
path
path.start_with?('/users/sign_in',
                         '/users/sign_out',
                         '/users/password',
                         '/users/sign_up',
                         '/users/confirmation')
continue
