continue
Current.user&.user_organisations&.for_organisation&.first&.profile
Current.user.profile
Current.user.profile_right
Current.user.profile_rights
Current.user&.profile
Current.user&.organisations&.for_organisation.first
Current.user&.organisations&.for_organisation
Current.user&.organisations&.for_organisation&
Current.user&.organisations&.for_
Current.user&.organisations&.for_organisation&.first&
Current.user&.organisations&.for_organisation&.first&.profile
Current.user&.organisations&.for_organisation&.first&.profile&.id
Current.user.organisations.
Current.user.profile
Current.user
Current
continue
Current.user
expect(profile_right.save)
profile_right
continue
Current.user
continue
current_user
find_current_organisation(current_user)
Current.organisation
continue
Current.organisation
Current
Current.user
Curent.user
user
current_user
continue
current_user&.user_organisations&.for_organisation&.first&.profile&.name
current_user&.user_organisations&.for_organisation.first.profile.name
current_user&.user_organisations&.for_organisation.first.profile
current_user&.user_organisations&.for_organisation.first
current_user&.user_organisations&.for_organisation
continue
current_user.user_organisations.for_organisation&.first&.profile&.id == @profile_right.profile_id
@profile_right
current_user.user_organisations.for_organisation&.first&.profile&.id == @profile_r
 @profile_right = ProfileRight.find(params[:id])
@profile_right.profil_id
current_user.user_organisations.for_organisation&.first&.profile&.id
current_user.organisations.current_user.user_organisations.for_organisation&.first&.profile&.id
current_user.organisations
continue
response.body
get profile_path(test)
test = Profile.where(organisation: organisation).first
continue
response.headers.to_h
response.body
response
get profile_path(test)
profile_path(test)
test = Profile.where(organisation: organisation).first
Profile.where(organisation: organisation).first
Profile.first
target_profile
continue
@organisation
current_user.current_organisation
 Current.organisation
continue
user
profile_path(target_profile)
target_profile
 get profile_path(target_profile)
ProfileRight.where(profile_id: 34).where(resource: "Profile", action: "show")
ProfileRight.where(profile_id: 34).where(resource: "Profile", action: "index")
ProfileRight.where(profile_id: 34).where(resource: "Profile", action: "index"))
ProfileRight.where(profile_id: 34).where(resource: "Profile").last
ProfileRight.where(profile_id: 34).where(resource: "Profile")
ProfileRight.where(profile_id: 34).last
ProfileRight.where(profile_id: 34)
UserOrganisation.where(user_id: user.id)
user
Profile.last
Profile.all
profile_path(target_profile)
expect(response).to have_http_status(:success)
target_profile
get profile_path(target_profile)
continue
        @profiles = Profile.where(organisation_id: params[:organisation_id]).all
params
continue
params
continue
action
check_profile_authorization(action, resource)
continue
check_profile_authorization(action, resource)
continue
 current_user.user_organisations.exists?(organisation: organization)
check_organization_access(@organisation)
check_profile_authorization(action, resource)
creator_access?
user_has_profile?
super_admin_access?
continue
OrganisationMailer.access_request_notification(access_request).deliver_now
continue
OrganisationMailer.access_request_notification(access_request).deliver_now
continue
OrganisationMailer.access_request_notification(access_request).deliver_now
OrganisationMailer.access_request_notification(access_request).deliver_later
continue
OrganisationMailer.access_request_notification(access_request).deliver_now
OrganisationMailer.access_request_notification(access_request).deliver_later
continue
Profile.find_by(name: 'Createurr', organisation_id: @organisation.id)
Profile.find_by(name: 'Creator', organisation_id: @organisation.id)
Profile.find_by(name: 'creator', organisation_id: @organisation.id)
 UserOrganisation.create(user: current_user,
                                    organisation: @organisation,
                                    profile: Profile.find_by(name: 'Creator', organisation_id: @organisation.id),
                                    creator: true)
Profile.find_by(name: 'creator', organisation_id: @organisation.id)
test.errors
test = UserOrganisation.create(user: current_user,
                                    organisation: @organisation,
                                    profile: Profile.find_by(name: 'creator', organisation_id: @organisation.id),
                                    creator: true)
UserOrganisation.create(user: current_user,
                                    organisation: @organisation,
                                    profile: Profile.find_by(name: 'creator', organisation_id: @organisation.id),
                                    creator: true)
continue
Profile.find_by(name: 'cr
test.errors
test = UserOrganisation.create(user: current_user, organisation: @organisation, creator: true)
UserOrganisation.create(user: current_user, organisation: @organisation, creator: true)
continue
params[:organisation_access_request][:profile_id]
params
continue
current_user&.user_members&.first&.member
current_user&.user_members&.first
current_user&.user_members
current_user&.user_members&.first&.member
continue
current_user.current_organisation_id
current_user.organisation_id
Current.organisation
current
Current
Current.organisation
@member.errors
@member = Member.create(name: params[:user][:name], email: params[:user][:email],
                                    phone: params[:user][:phone], organisation: Current.organisation)
Member.create(name: params[:user][:name], email: params[:user][:email],
                                    phone: params[:user][:phone], organisation: Current.organisation)
continue
params
 Member.create(name: params[:name], email: params[:email],
                                    phone: params[:phone], organisation: Current.organisation)
continue
 current_user&.members&.for_organisation&.first
continue
@member&.id.blank?
@member&.id
@member&.empty?
@member&.blank?
@member&.present?
@member
continue
current_user&.members
current_user&.members&.for_organisation&.first
continue
current_user&.members&.for_organisation&.first
continue
            @member.update(name: params[:name], email: params[:email], phone: params[:phone], organisation: @organisation)
@member.errors
@member.update(name: params[:name], email: params[:email], phone: params[:phone])
continue
member.errors
            member = Member.create(name: params[:name], email: params[:email], phone: params[:phone], organisation: @organisation)
           Member.create(name: params[:name], email: params[:email], phone: params[:phone], organisation: @organisation)
member&.present?
member
memeber
continue
current_user&.members
continue
current_user&.members
current_user&.members&.for_organisation&.first
continue
@request.role
@request.organisation
 @request.user
continue
exclude_actions[resource]&.include?(action)
continue
resource
exclude_actions[resource]&.include?(action)
action_dont_have_to_be_checked
continue
model_list.map(&:name).include?(resource)
authorized
continue
test = ProfileRight.find_or_create_by(
                    profile: @profile,
                    resource: resource.to_s,
                    action: action,
                    authorized: false,
                    organisation_id: Current.organisation.id
                )
test.errors
test = ProfileRight.find_or_create_by(
                    profile: @profile,
                    resource: resource.to_s,
                    action: action,
                    authorized: false,
                    organisation_id: Current.organisation.id
                )
ProfileRight.find_or_create_by(
                    profile: @profile,
                    resource: resource.to_s,
                    action: action,
                    authorized: false,
                    organisation_id: Current.organisation.id
                )
ProfileRight.find_or_create_by(
                    profile: @profile,
                    resource: resource,
                    action: action,
                    authorized: false,
                    organisation_id: Current.organisation.id
                )
action
resource
continue
resource.to_s.underscore
continue
 @profile
@profile.profile_rights
 @profile
continue
 @profile
@proflie
@profile.profile_rights
continue
@profile
continue
 current_user.user_organisations.for_organisation.first
 current_user.user_organisations.for_organisation.first.creator
continue
        current_user.user_organisations.find_by(organisation_id: current_user.current_organisation_id).profile.authorized_for?(resource, action)
        current_user.where(organisation_id: Current.organisation.id).first.profile.authorized_for?(resource, action)
current_user.for_organisation.user_organisations.first.profile
current_user.for_organisations.first.profile
